═══════════════════════════════════════════════════════════════════════════════
                    RENDER DEPLOYMENT - FILL IN THE FORM
═══════════════════════════════════════════════════════════════════════════════

You're on the right screen! Here's what to enter in each field:

═══════════════════════════════════════════════════════════════════════════════

✅ ALREADY CORRECT (Don't change these):
───────────────────────────────────────────────────────────────────────────────
✓ Source Code:        Varunmathiazhagan/sql_hosting
✓ Language:           Python 3
✓ Branch:             main
✓ Region:             Oregon (US West)
✓ Build Command:      pip install -r requirements.txt


🔧 NEED TO CHANGE THIS:
───────────────────────────────────────────────────────────────────────────────

Start Command:
   CHANGE FROM: gunicorn your_application.wsgi
   CHANGE TO:   gunicorn dashboard:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120

   Copy this exact command:
   gunicorn dashboard:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120


═══════════════════════════════════════════════════════════════════════════════

📝 OPTIONAL (But Recommended):
───────────────────────────────────────────────────────────────────────────────

Name:
   Current:  sql_hosting
   Better:   sql-scanner-dashboard  (easier to remember)
   (You can keep sql_hosting if you prefer)

Root Directory:
   Leave EMPTY (your code is in the root)

Project:
   Leave as "Select a project..." (not needed)

Environment:
   Leave as "Select an environment..." (not needed)


═══════════════════════════════════════════════════════════════════════════════

🔑 ENVIRONMENT VARIABLES (Important!):
───────────────────────────────────────────────────────────────────────────────

Click "Add Environment Variable" and add these THREE variables:

Variable 1:
   NAME_OF_VARIABLE:  PYTHON_VERSION
   value:             3.11.0

Variable 2:
   NAME_OF_VARIABLE:  FLASK_ENV
   value:             production

Variable 3:
   NAME_OF_VARIABLE:  SECRET_KEY
   value:             Click "Generate" button (auto-generates secure key)


═══════════════════════════════════════════════════════════════════════════════

💰 INSTANCE TYPE:
───────────────────────────────────────────────────────────────────────────────

For Testing/Learning:
   ✓ Select "Free" - $0/month
   - 512 MB RAM
   - Sleeps after 15 min of inactivity
   - First request may be slow (30-60 seconds)
   - Perfect for testing!

For Production/Real Use:
   ✓ Select "Starter" - $7/month
   - 512 MB RAM
   - Always running (no sleep)
   - No cold starts
   - Better performance


═══════════════════════════════════════════════════════════════════════════════

✅ FINAL CHECKLIST BEFORE CLICKING "Deploy":
───────────────────────────────────────────────────────────────────────────────

□ Start Command is: gunicorn dashboard:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120
□ Environment Variable: PYTHON_VERSION = 3.11.0
□ Environment Variable: FLASK_ENV = production
□ Environment Variable: SECRET_KEY = (generated)
□ Instance Type: Free (or Starter if you want always-on)


═══════════════════════════════════════════════════════════════════════════════

🚀 READY TO DEPLOY!
───────────────────────────────────────────────────────────────────────────────

1. Make sure all the above settings are correct
2. Scroll to the bottom
3. Click the big blue "Deploy Web Service" button
4. Wait 2-5 minutes while Render builds your app
5. Watch the logs - you'll see:
   ✓ Cloning repository...
   ✓ Installing dependencies...
   ✓ Building...
   ✓ Starting application...
   ✓ Live! (Status changes to green)

6. Click your app URL at the top to open your dashboard!


═══════════════════════════════════════════════════════════════════════════════

❓ WHAT HAPPENS NEXT:
───────────────────────────────────────────────────────────────────────────────

After clicking "Deploy Web Service":

1. Build Phase (1-3 minutes):
   - Render clones your GitHub repo
   - Installs Python 3.11
   - Runs: pip install -r requirements.txt
   - You'll see all packages installing

2. Start Phase (30 seconds):
   - Runs: gunicorn dashboard:app...
   - Your Flask app starts
   - Health check runs

3. Live! (Status turns green):
   - Your app is accessible
   - URL is shown at the top
   - Click to open your dashboard

4. First Test:
   - Open your app URL
   - You'll see the SQL Scanner Dashboard
   - Enter http://testphp.vulnweb.com
   - Click "Run Scan"
   - It works! 🎉


═══════════════════════════════════════════════════════════════════════════════

🆘 IF SOMETHING GOES WRONG:
───────────────────────────────────────────────────────────────────────────────

Build Fails:
   → Click "Logs" tab to see error
   → Usually it's a typo in Start Command
   → Edit the Start Command and redeploy

App Crashes:
   → Check "Logs" tab for errors
   → Verify environment variables are set
   → Make sure Start Command is exactly right

Can't Access:
   → Wait a few more minutes (first deploy takes time)
   → Check if status shows "Live"
   → Try accessing /health endpoint first


═══════════════════════════════════════════════════════════════════════════════

📋 COPY-PASTE READY:
═══════════════════════════════════════════════════════════════════════════════

Start Command (copy this):
gunicorn dashboard:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120

Environment Variables (copy these):
PYTHON_VERSION = 3.11.0
FLASK_ENV = production
SECRET_KEY = (click Generate)


═══════════════════════════════════════════════════════════════════════════════

Ready? Make those changes and click "Deploy Web Service"! 🚀

═══════════════════════════════════════════════════════════════════════════════
