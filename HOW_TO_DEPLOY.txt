═══════════════════════════════════════════════════════════════════════════════
                    RENDER DEPLOYMENT - STEP BY STEP GUIDE
═══════════════════════════════════════════════════════════════════════════════

📋 PREREQUISITES CHECKLIST
───────────────────────────────────────────────────────────────────────────────
□ GitHub account (create at github.com)
□ Render account (create at render.com - FREE)
□ Your code ready to push


🚀 DEPLOYMENT STEPS
═══════════════════════════════════════════════════════════════════════════════

STEP 1: PUSH YOUR CODE TO GITHUB
───────────────────────────────────────────────────────────────────────────────

1.1 Open Command Prompt in your project folder (c:\pro\SQL_CRAWLER)

1.2 Run these commands ONE BY ONE:

    git init
    
    git add .
    
    git commit -m "SQL Scanner ready for Render deployment"

1.3 Create a new repository on GitHub:
    - Go to https://github.com/new
    - Repository name: sql-scanner-dashboard
    - Make it Public or Private (your choice)
    - DO NOT initialize with README (we already have one)
    - Click "Create repository"

1.4 Connect and push (replace YOUR_USERNAME with your GitHub username):

    git remote add origin https://github.com/YOUR_USERNAME/sql-scanner-dashboard.git
    
    git branch -M main
    
    git push -u origin main

    ✅ Code is now on GitHub!


STEP 2: DEPLOY TO RENDER
───────────────────────────────────────────────────────────────────────────────

2.1 Create Render account (if you don't have one):
    - Go to https://render.com
    - Click "Get Started" or "Sign Up"
    - Sign up with GitHub (recommended) or email
    - Verify your email

2.2 Create new Web Service:
    - Go to https://dashboard.render.com
    - Click "New +" button (top right)
    - Select "Blueprint" from dropdown

2.3 Connect GitHub repository:
    - Click "Connect account" if not already connected
    - Authorize Render to access your GitHub
    - Find "sql-scanner-dashboard" repository
    - Click "Connect"

2.4 Render will detect render.yaml:
    - You'll see "Blueprint Detected"
    - Shows: sql-crawler-dashboard (Web Service)
    - Review the configuration
    - Click "Apply" button

2.5 Wait for deployment:
    - Build starts automatically
    - Watch the logs (shows progress)
    - Takes 2-5 minutes
    - Status changes from "Building" → "Live"

    ✅ Your app is deployed!


STEP 3: ACCESS YOUR DASHBOARD
───────────────────────────────────────────────────────────────────────────────

3.1 Get your app URL:
    - Render shows your URL at the top
    - Format: https://sql-crawler-dashboard-xxxx.onrender.com
    - Click the URL or copy it

3.2 Open in browser:
    - Visit your app URL
    - You should see the SQL Scanner Dashboard
    - The interface is ready to use!

3.3 Test the scanner:
    - Enter a test URL: http://testphp.vulnweb.com
    - Set Max Depth: 1
    - Set Concurrency: 5
    - Click "Run Scan"
    - Watch results appear!

    ✅ Your scanner is working!


═══════════════════════════════════════════════════════════════════════════════
                            ALTERNATIVE METHOD
═══════════════════════════════════════════════════════════════════════════════

If Blueprint doesn't work, use Manual Web Service:

1. Go to https://dashboard.render.com
2. Click "New +" → "Web Service"
3. Connect your GitHub repository
4. Fill in these settings:

   Name:            sql-crawler-dashboard
   Region:          Oregon (or closest to you)
   Branch:          main
   Runtime:         Python 3
   Build Command:   pip install -r requirements.txt
   Start Command:   gunicorn dashboard:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120

5. Add Environment Variables:
   Click "Add Environment Variable" for each:

   Key: PYTHON_VERSION      Value: 3.11.0
   Key: FLASK_ENV           Value: production

6. Select Instance Type:
   - Free (for testing)
   - Starter ($7/mo - no cold starts)

7. Click "Create Web Service"

8. Wait for deployment (2-5 minutes)


═══════════════════════════════════════════════════════════════════════════════
                            TROUBLESHOOTING
═══════════════════════════════════════════════════════════════════════════════

❌ Build fails?
   → Check build logs in Render dashboard
   → Verify requirements.txt has no syntax errors
   → Ensure runtime.txt has correct Python version

❌ App shows "Application failed to respond"?
   → Check application logs
   → Verify PORT environment variable is being used
   → Ensure gunicorn is in requirements.txt

❌ Can't connect GitHub?
   → Go to Settings → Connected Accounts
   → Reconnect GitHub
   → Grant necessary permissions

❌ Page loads but looks broken?
   → Check browser console for errors
   → Verify static files are loading
   → Check CORS settings

❌ Free tier sleeping issues?
   → First request may take 30-60 seconds (cold start)
   → Upgrade to Starter plan ($7/mo) for always-on


═══════════════════════════════════════════════════════════════════════════════
                            POST-DEPLOYMENT
═══════════════════════════════════════════════════════════════════════════════

✅ Test these endpoints:

   https://your-app.onrender.com/              (Dashboard)
   https://your-app.onrender.com/health        (Health check)
   https://your-app.onrender.com/api/status    (API status)

✅ Monitor your app:
   - View logs: Dashboard → Your Service → Logs
   - Check metrics: Dashboard → Your Service → Metrics
   - Set up alerts: Dashboard → Your Service → Settings

✅ Update later:
   - Just push to GitHub: git push
   - Render auto-deploys on push!


═══════════════════════════════════════════════════════════════════════════════
                            QUICK REFERENCE
═══════════════════════════════════════════════════════════════════════════════

GitHub Commands:
  git add .
  git commit -m "message"
  git push

Render URLs:
  Dashboard:  https://dashboard.render.com
  Docs:       https://render.com/docs
  Community:  https://community.render.com

Your App URLs (after deployment):
  Dashboard:  https://your-app-name.onrender.com
  Health:     https://your-app-name.onrender.com/health
  API:        https://your-app-name.onrender.com/api/results


═══════════════════════════════════════════════════════════════════════════════
                            NEED HELP?
═══════════════════════════════════════════════════════════════════════════════

📚 Documentation:
   - QUICKSTART.md (in your project)
   - DEPLOYMENT.md (detailed guide)
   - CHECKLIST.md (pre-deployment checklist)

🌐 External Help:
   - Render Docs: https://render.com/docs/deploy-flask
   - Render Community: https://community.render.com
   - GitHub Issues: Create issue in your repository


═══════════════════════════════════════════════════════════════════════════════

Ready to deploy? Start with STEP 1 above! 🚀

═══════════════════════════════════════════════════════════════════════════════
